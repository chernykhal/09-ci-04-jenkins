---
- name: Prepare all hosts
  hosts: all
  tasks:
    - name: Create group
      become: true
      group:
        name: "{{ user_group }}"
        state: present
    - name: Create user
      become: true
      user:
        name: "{{ user_name }}"
        generate_ssh_key: true
      register: ssh_key_info
    - name: Install JDK
      become: true
      package:
        name: "{{ java_packages }}"
        state: present
- name: Get Jenkins master installed
  hosts: jenkins_masters
  tasks:
    - name: Add Jenkins key
      become: true
      ansible.builtin.get_url:
        url: "https://pkg.jenkins.io/debian-stable/jenkins.io.key"
        dest: "/usr/share/keyrings/jenkins-keyring.asc"
    - name: Add Jenkins repo
      become: true
      ansible.builtin.copy:
        content: 'deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/'
        dest: /etc/apt/sources.list.d/jenkins.list
    - name: apt-get update
      become: true
      ansible.builtin.apt:
        update_cache: yes
    - name: Install Jenkins and requirements
      become: true
      ansible.builtin.apt:
        pkg:
          - jenkins
          - git
      register: jenkins_installed
    - name: Ensure jenkins agents are present in known_hosts file
      become_user: "{{ jenkins_user_name }}"
      known_hosts:
        name: "{{ hostvars[item].ansible_host }}"
        state: present
        key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[item].ansible_host }}') }}"
        hash_host: true
      with_items: "{{ groups.jenkins_agents }}"
    - name: Start Jenkins
      become: true
      systemd:
        name: jenkins
        state: restarted
        enabled: true
      when: jenkins_installed is changed
- name: Prepare jenkins agent
  hosts: jenkins_agents
  tasks:
    - name: Add master publickey into authorized_key
      become: true
      authorized_key:
        user: "{{ jenkins_user_name }}"
        state: present
        key: "{{ hostvars['jenkins-master-01']['ssh_key_info']['ssh_public_key'] }}"
    - name: Create agent_dir
      become: true
      file:
        path: "{{ jenkins_agent_dir }}"
        state: directory
        owner: "{{ jenkins_user_name }}"
        group: "{{ jenkins_user_group }}"
    - name: Add Docker key
      become: true
      ansible.builtin.get_url:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        dest: "/etc/apt/trusted.gpg.d/docker.asc"
    - name: Add a Docker apt repository entry
      become: true
      ansible.builtin.copy:
        content: 'deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/ubuntu jammy stable'
        dest: /etc/apt/sources.list.d/docker.list
    - name: Run "apt-get update"
      become: true
      ansible.builtin.apt:
        update_cache: yes
    - name: Install some required
      become: true
      ansible.builtin.apt:
        pkg:
          - git
          - python3
          - pip
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
    - name: Update pip
      become: true
      pip:
        executable: pip3
        name: pip
        extra_args: --upgrade
    - name: Install Ansible
      become: true
      pip:
        executable: pip3
        name:
          - selinux
          - ansible<3.0
        state: present
    - name: Reinstall Selinux
      become: true
      pip:
        executable: pip3
        name:
          - selinux
        state: forcereinstall
    - name: Add local to PATH
      become_user: "{{ jenkins_user_name }}"
      lineinfile:
        dest: ~/.bashrc
        regexp: export PATH=$PATH:/home/jenkins/.local/bin
        line: export PATH=$PATH:/home/jenkins/.local/bin
    - name: Create docker group
      become: true
      group:
        name: docker
        state: present
    - name: Add jenkinsuser to dockergroup
      become: true
      user:
        name: "{{ jenkins_user_name }}"
        groups: docker
    - name: Restart docker
      become: true
      systemd:
        name: docker
        state: restarted
        enabled: true
    - name: Install agent.jar
      become: true
      get_url:
        url: "http://{{ hostvars['jenkins-master-01']['ansible_host'] }}:8080/jnlpJars/agent.jar"
        dest: "{{ jenkins_agent_dir }}"
      register: install_agent
      until: install_agent is succeeded
      retries: 10
      timeout: 10
